/** global variables **/
:root {
  --primary-color: #111111;
  --secondary-color: #e0b354;
  --dark-grey: #2b2b2b;
  --background-color: #eeeeee;
  --visited-link-color: #05676e;
  --active-link-color: #489c79;
  --button-background-color: #111111;
  --button-text-color: #ffffff;
  --secondary-background-color: #dddddd;
  --item-background-color: #d3d3d3;
  --h1-font-size: 22px;

  --theme-border-radius: 10px;
  --theme-default-padding: 10px;
}

/** top level elements */
body {
  background-color: var(--background-color);
  color: var(--primary-color);
  font-family: 'Quicksand', sans-serif;
  font-weight: 400;
  font-size: 16px;
  /* Sets the font size to 16px */
  line-height: 1.6;
  /* Sets the line-height to 1.6 */
}

h1 {
  font-size: 30px;
  font-weight: 700;
}

h2 {
  font-size: 24px;
  font-weight: 700;
}

h3 {
  font-size: 18px;
  font-weight: 700;
}

a {
  color: var(--primary-color);
}

a:visited {
  /* visited link */
  color: var(--visited-link-color);
}

a:active {
  /* selected link */
  color: var(--active-link-color);
}

a:hover,
a:focus {
  /* No underlining when hovering over a link */
  text-decoration: none;
}

* {
  box-sizing: border-box;
}

button:hover,
button:focus,
.button:hover,
.button:focus {
  /* lets the mouse appear as a hand when hovering over the button */
  cursor: pointer;
  /* reduces the opacity of the button to 80% */
  opacity: 0.8;
}
button {
  transition: 0.5s, opacity;
}

.button--search {
  border: 0;
  background-color: var(--background-color);
  :hover {
    color: var(--primary-color);
  }
  :selected {
    color: var(--primary-color);
  }
}

.button--pokemon {
  border: 0;
  padding: var(--theme-default-padding);
  background-color: var(--item-background-color);
  :hover {
    color: var(--primary-color);
  }
  :selected {
    color: var(--primary-color);
  }
  width: 100%;
}

div {
  padding: var(
    --theme-default-padding
  ); /* Adds a 10px inner spacing to all sides*/
  /* margin: 10px; /* Adds a 10px outer spacing to all sides */
  margin: 0 auto;
  width: 100%;
  text-align: center;
}

head {
  flex: auto;
}

// It is important to make sure that the pokedex body and the full page grid are not padded otherwise it looks bad.
.pokedex-body,
.full-page-grid {
  padding: 0;
  background-color: var(--background-color);
}

// set the minimum and maximum width so the layout doesn't look pants.
.pokedex-body {
  min-width: 250px;
  max-width: 400px;
  float: left;
  width: 100%;
  margin-left: 0;
}

h1 {
  animation-duration: 3s;
  animation-iteration-count: 1;
  animation-direction: alternate;
  animation-timing-function: linear;
}

h3 {
  text-align: left;
  padding-left: var(--theme-default-padding);
}

.navigation-list__item--active {
  text-decoration: none;
}

.list__no-bullet-points {
  list-style-type: none;
}

.navigation-list {
  list-style-type: none;
}

.profile {
  max-width: 700px;
  margin: 0 auto;
}

.profile__graphic--inline {
  display: inline-block;
  float: left;
  margin: 0 auto;

  /* using max-width instead of width. For the purpose of the exercise I am putting border-radius 50% but the png source is rounded through a clipping mask in photoshop before */
  max-width: 250px;
  margin-right: 40px;
  border-radius: 50%;
}

.topbanner {
  /* position: relative;
  top: 20px;
  left: 20px; */
  min-width: 200px;
  max-width: 800px;
  border-spacing: 20px;
}

.page-footer {
  clear: both;
  width: 100%;
  text-align: center;
  flex-direction: column;
  display: flex;
}

.page-footer-item {
  flex-grow: 1;
}

/* work page css styling */
.documentation-iframe {
  height: 800px;
  width: 100%;
}


.project-grid {
  display: grid;
  /* creates a column for every '1fr' i specify */
  grid-template-columns: 1fr;
  grid-gap: 10px;
  background-color: var(--background-color);
}

/* work page css styling */
.heading-grid {
  display: grid;
  /* creates a column for every '1fr' i specify */
  grid-template-columns: 9fr 1fr;
  grid-gap: 5px;
  height: 80px;
  background-color: var(--background-color);
}

/* pokedex full page grid */
.full-page-grid {
  display: grid;
  /* creates a column for every '1fr' i specify */
  grid-template-columns: 5fr 5fr;
  grid-gap: 5px;
  background-color: white;
  height: 1200px;
}

/* Grid fallback*/
.project-grid__item {
  display: inline-block;
  width: 33%;
}

/* if grid supported, overwrite fallback*/
.project-grid__item {
  background-color: lightgray;
  line-height: normal;
  padding: 0;
  /* Set width to auto*/
  width: 100%;
  :hover {
    background-color: var(--secondary-background-color);
  }
}

.standard-label {
  align-self: flex-start;
}

.standard-input {
  align-self: flex-end;
}

/** just testing layouts
.project-grid__item:first-child {
  grid-column-start: 1;
  grid-column-end: 1;
  grid-row-start: 1;
  grid-row-end: 3;
}
**/

/** media styles for responsive page **/

/** 1 column when less than 500px **/
@media all and (max-width: 500px) {
  .project-grid {
    grid-template-columns: 1fr;
  }
  .project-grid__item:last-child {
    grid-column: auto / auto;
    grid-row: auto / auto;
  }
  h1 {
    font-size: var(--h1-font-size);
  }
}

/** modal CSS **/
#modal-container {
  position: fixed;
  padding: 20px;
  box-sizing: border-box;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);

  /* to show it above other content */
  z-index: 999;

  /* to allow scrolling if the screen is not high enough*/
  overflow: auto;

  /* this is used to center the modal */
  display: grid;
  text-align: center;
}

.list-group-item {
  color: var(--item-background-color);
  background-color: var(--item-background-color);
}

.modal-confirm {
  border: 0;
  padding: var(--theme-default-padding);
  background-color: var(--item-background-color);
  :hover {
    color: var(--primary-color);
  }
  :selected {
    color: var(--primary-color);
  }
}

.pokemon-image {
  display: block;
  margin-left: auto;
  margin-right: auto;
  width: 50%;
}

#modal-container {
  display: none;
}

#modal-container.is-visible {
  /* CSS for modal container - add your own desired CSS styles here */
  display: block;
}

.input-wrapper .error-message {
  color: #aa0000;
}
